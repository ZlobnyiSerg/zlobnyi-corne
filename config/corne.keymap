/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define FUN 3
#define ADJ 4

#define QUEST 0x003F

&lt {
    quick_tap_ms = <120>;
};

&mt {
    quick_tap_ms = <120>;
};

/ {
    behaviors {
        bhm: backspace_hold_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&bspc_repeat>;
            hold-trigger-key-positions = <0>;
            hold-trigger-on-release;
        };
        
        bspc_repeat: backspace_repeat {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
}

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <FUN>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <30>;
            key-positions = <37 38>;
            bindings = <&mo ADJ>;
        };

        combo_dash {
            timeout-ms = <20>; // Adjust if needed
            key-positions = <19 20>; // J + K
            bindings = <&kp MINUS>;
        };

        combo_question {
            timeout-ms = <20>; // Adjust if needed
            key-positions = <18 19>; // H + J
            bindings = <&kp QMARK>;
        };
    };
};

/ {
    macros {
        arrow_macro: arrow_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;  // Small delay between characters
            bindings = <&kp EQUAL &kp GT>;  // Types "=" then ">"
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                        &kp ESC     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &kp LBKT
                        &kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
                        &kp LSHIFT  &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp RBKT
                                                                &kp LCTRL   &mo LWR  &kp SPACE &mt RSHIFT ENTER &bhm RSE BSPC &kp LALT
            >;
        };

        layer_1 {
            bindings = <
                        &trans      &kp N1      &kp N2      &kp N3      &kp N4          &kp N5      &kp N6      &kp N7       &kp N8      &kp N9      &kp N0         &trans
                        &kp LA(TAB) &trans      &trans      &kp LPAR    &kp RPAR        &kp LA(INS) &kp HOME    &kp LEFT     &kp DOWN    &kp UP      &kp RIGHT      &trans
                        &trans      &trans      &trans      &kp LS(N2)  &kp LS(FSLH)    &kp DEL     &kp END     &kp LC(LEFT) &kp PG_DN   &kp PG_UP   &kp LC(RIGHT)  &trans
                                                                &kp LGUI  &trans      &trans      &trans      &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
                        &trans      &kp APOS    &kp LT      &kp GT       &kp DQT    &kp DOT     &kp AMPERSAND &arrow_macro &kp LBKT    &kp RBKT    &kp PERCENT &trans
                        &trans      &kp EXCL    &kp MINUS   &kp PLUS     &kp EQUAL  &kp HASH    &kp PIPE      &kp COLON    &kp LPAR    &kp RPAR    &kp QMARK   &trans
                        &trans      &kp CARET   &kp SLASH   &kp ASTRK    &kp BSLH   &kp GRAVE   &kp TILDE     &kp DOLLAR   &kp LBRC    &kp RBRC    &kp AT_SIGN &trans
                                                                &trans      &trans      &trans      &trans      &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
                        &trans      &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp PSCRN   &kp N7      &kp N8      &kp N9     &kp PLUS          &trans
                        &trans      &trans      &kp F5      &kp F6      &kp F7      &kp F8      &kp SLASH   &kp N4      &kp N5      &kp N6     &kp MINUS         &trans
                        &trans      &trans      &kp F9      &kp F10     &kp F11     &kp F12     &kp DOT     &kp N1      &kp N2      &kp N3     &kp KP_MULTIPLY   &trans
                                                                &trans      &trans      &trans      &trans      &trans         &kp N0
            >;
        };

        adjust_layer {
            bindings = <
                        &bootloader           &none           &none        &none        &none        &none        &none        &none        &none        &none        &studio_unlock  &bootloader
                        &bt BT_CLR            &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none        &kp C_VOLUME_DOWN &kp C_PLAY_PAUSE &kp C_VOLUME_UP &none           &none
                        &ext_power EP_OFF     &kp KP_NUM      &none        &none        &none        &none        &none        &none        &none        &none        &none           &ext_power EP_OFF
                                                                &none       &none           &none        &none        &none        &none
            >;
        };
    };
};
